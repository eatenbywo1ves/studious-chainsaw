# Security Configuration for development
# Copy this file to .env.development and fill in the values

# JWT Configuration
# Use relative paths (will work in Docker and local dev)
JWT_PRIVATE_KEY_PATH=./security/keys/jwt_development_private.pem
JWT_PUBLIC_KEY_PATH=./security/keys/jwt_development_public.pem
JWT_ALGORITHM=RS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=15
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# API Encryption
API_ENCRYPTION_KEY_PATH=./security/keys/api_encryption_development.key

# Database Encryption
DB_ENCRYPTION_KEY_PATH=./security/keys/db_encryption_development.key

# Security Level (basic, enhanced, strict)
SECURITY_LEVEL=enhanced

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_BURST=10

# DDoS Protection
DDOS_PROTECTION_ENABLED=true
DDOS_BLOCK_DURATION_MINUTES=60

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
CORS_ALLOW_CREDENTIALS=true

# Session Configuration
# NOTE: These secrets are generated automatically by 01-setup-keys.sh
# DO NOT commit actual .env files - only this template
SESSION_SECRET_KEY=GENERATE_RANDOM_SECRET_HERE
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=strict

# CSRF Protection
CSRF_ENABLED=true
CSRF_SECRET_KEY=GENERATE_RANDOM_SECRET_HERE

# Redis Configuration (for distributed security)
# Note: Redis password will be configured during deployment
REDIS_URL=redis://:REDIS_PASSWORD_HERE@localhost:6379
REDIS_PASSWORD=REDIS_PASSWORD_HERE
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
