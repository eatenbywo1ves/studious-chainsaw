# ============================================================================
# Test Environment Configuration
# ============================================================================
# Purpose: Configuration for 87 integration tests
# WARNING: These are TEST credentials only - DO NOT use in production!
# ============================================================================

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# Test PostgreSQL Database
TEST_DATABASE_URL=postgresql://postgres:postgres@localhost:5433/test_saas
POSTGRES_HOST=localhost
POSTGRES_PORT=5433
POSTGRES_DB=test_saas
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================

# Test Redis Instance
TEST_REDIS_URL=redis://:test_redis_password@localhost:6380
TEST_REDIS_HOST=localhost
TEST_REDIS_PORT=6380
TEST_REDIS_PASSWORD=test_redis_password

# Redis Configuration
REDIS_MAX_CONNECTIONS=50
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# ============================================================================
# API CONFIGURATION
# ============================================================================

# Test API Server
TEST_API_URL=http://localhost:8001
TEST_API_HOST=localhost
TEST_API_PORT=8001

# API Settings
API_WORKERS=1
API_TIMEOUT=30
API_MAX_REQUEST_SIZE=10485760  # 10MB

# ============================================================================
# JWT & AUTHENTICATION
# ============================================================================

# JWT Configuration (TEST ONLY - DO NOT USE IN PRODUCTION)
JWT_SECRET_KEY=test_secret_key_for_integration_tests_only_do_not_use_in_production
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# D3FEND Controls
ENABLE_D3_UAC=true
ENABLE_D3_RAC=true
ENABLE_D3_KM=true

# Rate Limiting (D3-RAC)
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000
RATE_LIMIT_BURST=10

# Token Blacklist (D3-UAC)
TOKEN_BLACKLIST_ENABLED=true
TOKEN_BLACKLIST_TTL=3600

# CORS Configuration
CORS_ORIGINS=*
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,PATCH
CORS_ALLOW_HEADERS=*

# ============================================================================
# MONITORING CONFIGURATION
# ============================================================================

# Prometheus (Note: Using port 9091 to avoid conflict with production Prometheus)
PROMETHEUS_URL=http://localhost:9091
PROMETHEUS_METRICS_PATH=/metrics
PROMETHEUS_SCRAPE_INTERVAL=15s

# Grafana (Note: Using port 3001 to avoid conflict with production Grafana)
GRAFANA_URL=http://localhost:3001
GRAFANA_USER=admin
GRAFANA_PASSWORD=admin

# Metrics
ENABLE_METRICS=true
METRICS_PORT=9090

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# GPU Features
ENABLE_GPU=false
GPU_DEVICE=cpu
GPU_MEMORY_FRACTION=0.5

# Test Endpoints
ENABLE_TEST_ENDPOINTS=true
ENABLE_DEBUG_MODE=true

# Monitoring
ENABLE_MONITORING=true
ENABLE_TRACING=false

# Email (Mock for tests)
ENABLE_EMAIL=false
EMAIL_BACKEND=mock

# Stripe (Mock for tests)
ENABLE_STRIPE=false
STRIPE_WEBHOOK_SECRET=test_webhook_secret

# ============================================================================
# TEST CONFIGURATION
# ============================================================================

# Test Settings
TEST_ENV=true
TEST_MODE=integration
TEST_PARALLEL=false
TEST_TIMEOUT=300

# Test Data
TEST_DATA_DIR=./test_data
TEST_FIXTURES_DIR=./fixtures

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=./test_execution.log

# ============================================================================
# PYTEST CONFIGURATION
# ============================================================================

# Coverage
COVERAGE_MIN_PERCENTAGE=80
COVERAGE_FAIL_UNDER=75

# Test Markers
TEST_MARKERS=integration,security,d3fend,monitoring

# ============================================================================
# D3FEND TEST VALIDATION
# ============================================================================

# D3-UAC (User Account Control) Tests
D3_UAC_TEST_COUNT=6
D3_UAC_REQUIRED_TESTS=test_valid_jwt,test_expired_jwt,test_invalid_signature,test_malformed_jwt,test_missing_claims,test_revoked_token

# D3-RAC (Resource Access Control) Tests
D3_RAC_TEST_COUNT=5
D3_RAC_REQUIRED_TESTS=test_rate_limit_per_tenant,test_rate_limit_per_ip,test_rate_limit_429,test_redis_state,test_burst_allowance

# D3-KM (Key Management) Tests
D3_KM_TEST_COUNT=4
D3_KM_REQUIRED_TESTS=test_key_loading,test_key_rotation,test_no_hardcoded_secrets,test_env_secrets

# ============================================================================
# SERVICE HEALTH CHECKS
# ============================================================================

# Health Check Configuration
HEALTH_CHECK_TIMEOUT=60
HEALTH_CHECK_INTERVAL=5
HEALTH_CHECK_RETRIES=12

# Service Endpoints
POSTGRES_HEALTH_CHECK=pg_isready -U postgres
REDIS_HEALTH_CHECK=redis-cli -a test_redis_password ping
PROMETHEUS_HEALTH_CHECK=http://localhost:9090/-/healthy
GRAFANA_HEALTH_CHECK=http://localhost:3000/api/health

# ============================================================================
# DOCKER COMPOSE SETTINGS
# ============================================================================

COMPOSE_PROJECT_NAME=saas-test
COMPOSE_FILE=docker-compose.test.yml

# ============================================================================
# END OF CONFIGURATION
# ============================================================================
