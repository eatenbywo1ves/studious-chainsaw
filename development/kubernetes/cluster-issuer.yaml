# ClusterIssuer for Let's Encrypt SSL certificates
# Requires cert-manager to be installed in the cluster
# Install cert-manager: kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.0/cert-manager.yaml

---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    # Staging server for testing (higher rate limits, but not trusted by browsers)
    server: https://acme-staging-v02.api.letsencrypt.org/directory

    # Email for Let's Encrypt notifications
    email: admin@your-domain.com

    # Secret to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-staging-key

    # HTTP-01 challenge solver
    solvers:
    - http01:
        ingress:
          class: nginx

---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # Production server (rate limited, but trusted by browsers)
    server: https://acme-v02.api.letsencrypt.org/directory

    # Email for Let's Encrypt notifications (certificate expiration warnings)
    email: admin@your-domain.com

    # Secret to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod-key

    # HTTP-01 challenge solver
    solvers:
    - http01:
        ingress:
          class: nginx

---
# Alternative: DNS-01 challenge (for wildcard certificates)
# Requires DNS provider API credentials
# Example for Cloudflare:
#
# apiVersion: cert-manager.io/v1
# kind: ClusterIssuer
# metadata:
#   name: letsencrypt-dns
# spec:
#   acme:
#     server: https://acme-v02.api.letsencrypt.org/directory
#     email: admin@your-domain.com
#     privateKeySecretRef:
#       name: letsencrypt-dns-key
#     solvers:
#     - dns01:
#         cloudflare:
#           email: cloudflare@your-domain.com
#           apiKeySecretRef:
#             name: cloudflare-api-key-secret
#             key: api-key
