# Kubernetes Secrets Example
# DO NOT commit actual secrets to git!
# Copy this file and replace with real values:
#   cp secrets.yaml.example secrets.yaml
#   # Edit secrets.yaml with real values
#   kubectl apply -f secrets.yaml
#   # Delete secrets.yaml after applying
#   rm secrets.yaml

---
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: catalytic-saas
type: Opaque
stringData:
  # PostgreSQL example
  url: "postgresql://catalytic_user:CHANGE_THIS_PASSWORD@db-host.example.com:5432/catalytic_saas"

  # SQLite example (for development/testing only)
  # url: "sqlite:///./catalytic_saas.db"

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: catalytic-saas
type: Opaque
stringData:
  # Redis connection string
  url: "redis://:CHANGE_THIS_REDIS_PASSWORD@redis-host.example.com:6379/0"

  # For Redis without password (not recommended for production)
  # url: "redis://redis-host.example.com:6379/0"

---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-secret
  namespace: catalytic-saas
type: Opaque
stringData:
  # Generate a strong random secret (minimum 32 characters)
  # Example generation: python -c "import secrets; print(secrets.token_urlsafe(64))"
  secret: "CHANGE_THIS_TO_A_LONG_RANDOM_SECRET_MINIMUM_32_CHARACTERS"

---
apiVersion: v1
kind: Secret
metadata:
  name: stripe-secrets
  namespace: catalytic-saas
type: Opaque
stringData:
  # Stripe API key (get from Stripe dashboard)
  # Development: sk_test_...
  # Production: sk_live_...
  api-key: "sk_live_CHANGE_THIS_TO_YOUR_STRIPE_API_KEY"

  # Stripe webhook secret (get from Stripe webhook settings)
  webhook-secret: "whsec_CHANGE_THIS_TO_YOUR_STRIPE_WEBHOOK_SECRET"

---
# Optional: Email service credentials
apiVersion: v1
kind: Secret
metadata:
  name: email-credentials
  namespace: catalytic-saas
type: Opaque
stringData:
  smtp-host: "smtp.sendgrid.net"
  smtp-port: "587"
  smtp-user: "apikey"
  smtp-password: "CHANGE_THIS_TO_YOUR_SENDGRID_API_KEY"
  email-from: "noreply@your-domain.com"

---
# How to create secrets from command line (recommended for production):
#
# kubectl create secret generic database-credentials \
#   --from-literal=url="postgresql://user:pass@host:5432/db" \
#   -n catalytic-saas
#
# kubectl create secret generic redis-credentials \
#   --from-literal=url="redis://:pass@host:6379/0" \
#   -n catalytic-saas
#
# kubectl create secret generic jwt-secret \
#   --from-literal=secret="$(python -c 'import secrets; print(secrets.token_urlsafe(64))')" \
#   -n catalytic-saas
#
# kubectl create secret generic stripe-secrets \
#   --from-literal=api-key="sk_live_..." \
#   --from-literal=webhook-secret="whsec_..." \
#   -n catalytic-saas
