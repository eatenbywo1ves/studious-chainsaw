version: '3.8'

services:
  # Main API service
  catalytic-api:
    build: .
    image: catalytic-lattice:latest
    container_name: catalytic-api
    ports:
      - "8000:8000"
    environment:
      - NUMBA_NUM_THREADS=8
      - OMP_NUM_THREADS=8
      - CATALYTIC_MAX_MEMORY_GB=4
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - aux_memory:/app/aux_memory
    networks:
      - catalytic-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G

  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    container_name: catalytic-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - catalytic-net
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL for metadata storage
  postgres:
    image: postgres:15-alpine
    container_name: catalytic-db
    environment:
      - POSTGRES_DB=catalytic
      - POSTGRES_USER=catalytic_user
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - catalytic-net
    restart: unless-stopped

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: catalytic-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - catalytic-net
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: catalytic-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - catalytic-net
    restart: unless-stopped

  # Worker for background jobs (optional, scales horizontally)
  worker:
    build: .
    image: catalytic-lattice:latest
    container_name: catalytic-worker
    command: python -m src.workers.background_processor
    environment:
      - REDIS_URL=redis://redis:6379
      - WORKER_ID=${HOSTNAME:-worker1}
      - NUMBA_NUM_THREADS=12
    volumes:
      - ./data:/app/data
      - aux_memory:/app/aux_memory
    networks:
      - catalytic-net
    restart: unless-stopped
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '2'
          memory: 4G

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: catalytic-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - catalytic-net
    depends_on:
      - catalytic-api
    restart: unless-stopped

volumes:
  aux_memory:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  catalytic-net:
    driver: bridge